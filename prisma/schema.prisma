generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ContentCategory {
  category_key    Int              @id @unique @default(autoincrement())
  category_name   String           @unique @db.VarChar(30)
  category_search String           @unique @db.VarChar(30)
  ContentMapping  ContentMapping[]
}

model ContentMapping {
  content_map_key Int             @id @unique @default(autoincrement())
  category        Int
  content         Int
  ContentCategory ContentCategory @relation(fields: [category], references: [category_key], onDelete: Cascade, map: "category_key")
  Contents        Contents        @relation(fields: [content], references: [content_key], onDelete: Cascade, map: "content_key")
}

model Contents {
  content_key    Int              @id @unique @default(autoincrement())
  content_title  String           @db.VarChar(30)
  content_link   String           @db.VarChar(100)
  content_img    String           @db.VarChar(100)
  place          String           @db.VarChar(30)
  introduction   String           @db.VarChar(200)
  start_at       String?          @db.VarChar(10)
  end_at         String?          @db.VarChar(10)
  inquiry        String[]
  price          String[]
  benefit        String[]
  ContentMapping ContentMapping[]
  Liked          Liked[]
}

model Liked {
  liked_key Int      @id @unique @default(autoincrement())
  user      Int
  content   Int
  Contents  Contents @relation(fields: [content], references: [content_key], onDelete: Cascade, map: "content_key")
  User      User     @relation(fields: [user], references: [user_key], onDelete: Cascade, map: "user_key")
}

model User {
  user_key     Int      @id @unique @default(autoincrement())
  user_name    String   @db.VarChar(30)
  user_age     Int
  user_gender  String   @db.VarChar(20)
  user_phone   String   @unique @db.VarChar(30)
  user_birth   String   @db.VarChar(30)
  sns_type     String   @db.VarChar(30)
  Liked        Liked[]
}

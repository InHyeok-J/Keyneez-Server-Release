generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ContentCategories {
  category_pk Int        @id @unique @default(autoincrement())
  category    String     @unique @db.VarChar(30)
  Contents    Contents[]
  Tags        Tags[]
}

model Tags {
  tag_pk            Int               @id @unique @default(autoincrement())
  tag               String            @unique @db.VarChar(30)
  category_fk       String            @db.VarChar(30)
  Contents          Contents[]
  ContentCategories ContentCategories @relation(fields: [category_fk], references: [category], onDelete: Cascade, map: "category_fk")
}

model Contents {
  content_pk        Int               @id @unique @default(autoincrement())
  category          String            @db.VarChar(30)
  tag               String            @db.VarChar(30)
  title             String            @db.VarChar(30)
  link              String            @db.VarChar(100)
  img               String            @db.VarChar(100)
  place             String            @db.VarChar(30)
  introduction      String            @db.VarChar(200)
  start_at          String?           @db.VarChar(10)
  end_at            String?           @db.VarChar(10)
  inquiry           String[]
  price             String[]
  benefit           String[]
  created_at        DateTime          @default(now())
  updated_at        DateTime          @updatedAt
  ContentCategories ContentCategories @relation(fields: [category], references: [category], onDelete: Cascade, map: "category_fk")
  Tags              Tags              @relation(fields: [tag], references: [tag], onDelete: Cascade, map: "tag_fk")
  Likes             Likes[]
}

model Likes {
  liked_pk Int      @id @unique @default(autoincrement())
  user     Int
  content  Int
  Contents Contents @relation(fields: [content], references: [content_pk], onDelete: Cascade, map: "content_fk")
  Users    Users    @relation(fields: [user], references: [user_pk], onDelete: Cascade, map: "user_fk")

  @@unique([user, content], name: "likes_userid")
  @@index([user, content])
}

model Users {
  user_pk    Int      @id @unique @default(autoincrement())
  name       String   @db.VarChar(30)
  age        Int
  gender     String   @db.VarChar(20)
  phone      String   @unique @db.VarChar(30)
  birth      String   @db.VarChar(30)
  sns_type   String   @db.VarChar(30)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Likes      Likes[]
}
